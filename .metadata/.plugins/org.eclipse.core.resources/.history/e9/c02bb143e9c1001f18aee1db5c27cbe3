/*
 * AT24C08.c
 *
 *  Created on: Dec 24, 2024
 *      Author: hyn02
 */

#include "AT24C08.h"
#include "i2c.h"

void AT24C08_Page_Write(unsigned char page, unsigned char* data, unsigned char len)
{
	unsigned char devAddress = ((page*16)>>8<<1) | 0xA0;
	unsigned char wordAddress = (page * 16) & 0xff;
	// 쓰기 금지 해제
	LL_GPIO_ResetOutputPin(GPIOC, LL_GPIO_PIN_13);
	HAL_I2C_Mem_Write(&hi2c1, devAddress, wordAddress, I2C_MEMADD_SIZE_8BIT, &data[0], 16, 1);
	HAL_Delay(1);
	LL_GPIO_SetOutputPin(GPIOC, LL_GPIO_PIN_13);
}

void AT24C08_Page_Read(unsigned char page, unsigned char* data, unsigned char len)
{
	unsigned char devAddress = ((page*16)>>8<<1) | 0xA0;
	unsigned char wordAddress = (page * 16) & 0xff;

	HAL_I2C_Mem_Read(&hi2c1, devAddress, wordAddress, I2C_MEMADD_SIZE_8BIT, &data[0], 16, 1);
}


void EP_PIDGain_Write(unsigned char id, float PGain, float IGain, float DGain)
{
	unsigned char buf_write[16];
	Parser parser;
	unsigned char chksum = 0xff;

	buf_write[0] = 0x45;
	buf_write[1] = 0x50;
	buf_write[2] = id;

	parser.f = PGain; //float 바이트 단위로 쪼개기
	buf_write[3] = parser.byte[0];
	buf_write[4] = parser.byte[1];
	buf_write[5] = parser.byte[2];
	buf_write[6] = parser.byte[3];
	parser.f = PGain;
	buf_write[7] = parser.byte[0];
	buf_write[8] = parser.byte[1];
	buf_write[9] = parser.byte[2];
	buf_write[10] = parser.byte[3];
	parser.f = PGain;
	buf_write[11] = parser.byte[0];
	buf_write[12] = parser.byte[1];
	buf_write[13] = parser.byte[2];
	buf_write[14] = parser.byte[3];

	for(int i=0; i<15; i++)
	{
		chksum -= buf_write[i];
	}
	buf_write[15] = chksum;

	switch(id)
	{
	case 0:
		AT24C08_Page_Write(0,&buf_write[0],16);
		break;
	case 1:
		AT24C08_Page_Write(1,&buf_write[0],16);
		break;
	case 2:
		AT24C08_Page_Write(2,&buf_write[0],16);
		break;
	case 3:
		AT24C08_Page_Write(3,&buf_write[0],16);
		break;
	case 4:
		AT24C08_Page_Write(4,&buf_write[0],16);
		break;
	case 5:
		AT24C08_Page_Write(5,&buf_write[0],16);
		break;
	}



}
